[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NumLámparasLED",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NumLámparasLED using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NumLámparasSodio",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NumLámparasSodio using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NumLámparasFluorescentes",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NumLámparasFluorescentes using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NumLámparasHalogenuros",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NumLámparasHalogenuros using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NumLámparasMercurio",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NumLámparasMercurio using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NumLámparasTotal",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NumLámparasTotal using expression value.toNumber()"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Descripción",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": " - idSig: ",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Descripción by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Descripción 2",
    "newColumnName": "IdSiguiente",
    "description": "Rename column Descripción 2 to IdSiguiente"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Descripción 1",
    "newColumnName": "Descripción",
    "description": "Rename column Descripción 1 to Descripción"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Identificador",
    "expression": "grel:value.split(\".\")[3]",
    "onError": "set-to-blank",
    "newColumnName": "idValue",
    "columnInsertIndex": 3,
    "description": "Create column idValue at index 3 based on column Identificador using expression grel:value.split(\".\")[3]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "idValue",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column idValue using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Tipo",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Tipo using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Dirección",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Dirección using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Descripción",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Descripción using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "CoordenadaX",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column CoordenadaX using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "CoordenadaY",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column CoordenadaY using expression value.toNumber()"
  },
  {
    "op": "core/column-removal",
    "description": "Eliminar duplicados basados en columna identificadora",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ID",
    "expression": "row.record.cells['ID'].value == row.record.cells['ID'].value",
    "action": "delete-rows",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 0
  },
  {
    "op": "core/text-transform",
    "description": "Normalizar formato de fecha a YYYY-MM-DD",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Fecha",
    "expression": "value.toDate().toString('yyyy-MM-dd')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 0
  },
  {
    "op": "core/text-transform",
    "description": "Capitalizar nombres de calles",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Dirección",
    "expression": "value.toLowercase().split(' ').map(word,word.capitalize()).join(' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 0
  }
]
