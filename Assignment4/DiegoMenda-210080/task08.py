# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ue1c7LWvPb_eDzhQtx_ie22MBiagrr08

**Task 08: Completing missing data**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

#Para visualizar que aspecto tienen los grados
print("############ GRAFO 1 ###########")
for s, p, o in g1:
  print(s,p,o)
print("############ GRAFO 2 ###########")
for s, p, o in g2:
  print(s,p,o)

from rdflib.namespace import RDF, FOAF
persons_g1 = g1.subjects(RDF.type, FOAF.Person)
DATA = Namespace("http://data.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

print("####### lista todos los elementos de la clase Person en el primer grafo #######")
for subj, pred, obj in g1.triples((None, RDF.type, DATA.Person)):
    print(subj)


for subj, pred, obj in g1.triples((None, RDF.type, DATA.Person)):
  if not (subj, VCARD.Given, None) in g1:
      for _, _, given_name in g2.triples((subj, VCARD.Given, None)):
            g1.add((subj, VCARD.Given, given_name))


  if not (subj, VCARD.Family, None) in g1:
        for _, _, family_name in g2.triples((subj, VCARD.Family, None)):
            g1.add((subj, VCARD.Family, family_name))


  if not (subj, VCARD.EMAIL, None) in g1:
        for _, _, email in g2.triples((subj, VCARD.EMAIL, None)):
            g1.add((subj, VCARD.EMAIL, email))



print("############ GRAFO 1 con los datos del GRAFO 2###########")
for s, p, o in g1:
  print(s,p,o)