# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QQiZ4Ehf2SNjSmhwi-aIuCn7YzJ0x7wJ

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

q1 = """
SELECT ?subclass WHERE {
    ?subclass rdfs:subClassOf ns:LivingThing .
}
"""

# TO DO
# Visualize the results

for r in g.query(q1):
  print(r.subclass)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

q2 = """

SELECT ?individuals WHERE {
    ?individuals rdf:type ?class .
    ?class rdfs:subClassOf* ns:Person .
}
"""

# TO DO
# Visualize the results

for r in g.query(q2):
    print(r.individuals)

"""**TASK 7.3: List all individuals of just "Person" or "Animal". You do not need to list the individuals of the subclasses of person (in SPARQL only)**

"""

q3 = """

SELECT ?individuals WHERE {
    {
        ?individuals rdf:type ns:Person .
    }
    UNION
    {
        ?individuals rdf:type ns:Animal .
    }
}
"""

# TO DO
# Visualize the results

for r in g.query(q3):
    print(r.individuals)

"""**TASK 7.4:  List the name of the persons who know Rocky (in SPARQL only)**"""

q4 = """
PREFIX ns: <http://somewhere#>

SELECT ?name WHERE {
    ?person a ns:Person .              # Find individuals of type Person
    ?person ns:knows ns:Rocky .        # Check if they know Rocky
    ?person ns:hasName ?name .         # Retrieve their name
}
"""

# TO DO
# Visualize the results

for r in g.query(q4):
    print(r.name)

"""**Task 7.5: List the name of those animals who know at least another animal in the graph (in SPARQL only)**"""

q5 = """

SELECT DISTINCT ?name WHERE {
    ?animal1 a ns:Animal .
    ?animal2 a ns:Animal .
    ?animal1 ns:knows ?animal2 .
    ?animal1 ns:hasName ?name .
}
"""

# TO DO
# Visualize the results

for r in g.query(q5):
    print(r.name)

"""**Task 7.6: List the age of all living things in descending order (in SPARQL only)**"""

q6 = """
PREFIX ns: <http://somewhere#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name ?age WHERE {
    ?name rdf:type ?class .
    ?class rdfs:subClassOf* ns:LivingThing .
    ?name foaf:age ?age .
}
ORDER BY DESC(?age)
"""

# TO DO
# Visualize the results

for r in g.query(q6):
    print(f"Name: {r.name}, Age: {r.age}")