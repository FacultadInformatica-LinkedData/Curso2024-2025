# -*- coding: utf-8 -*-
"""Task06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V402_z_7aVWLm3ivCrWvUQ9KSBa2VyqB

```
# Tiene formato de código
```

**Task 06: Modifying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""Read the RDF file as shown in class"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example5.rdf", format="xml")

"""Create a new class named Researcher"""

ns = Namespace("http://somewhere#")
g.add((ns.Researcher, RDF.type, RDFS.Class))
for s, p, o in g:
  print(s,p,o)

"""

**TASK 6.1: Create a new class named "University"**
"""

# Crear una nueva clase llamada "University"
g.add((ns.University, RDF.type, RDFS.Class))

# Visualizar resultados después de añadir la clase "University"
print("\nResultados después de añadir la clase 'University':")
for s, p, o in g:
    print(s, p, o)

"""**TASK 6.2: Add "Researcher" as a subclass of "Person"**"""

# Añadir "Researcher" como una subclase de "Person"
g.add((ns.Researcher, RDFS.subClassOf, ns.Person))

# Visualizar resultados después de añadir la subclase "Researcher"
print("\nResultados después de añadir 'Researcher' como subclase de 'Person':")
for s, p, o in g:
    print(s, p, o)

"""**TASK 6.3: Create a new individual of Researcher named "Jane Smithers"**"""

g.add((ns.JaneSmithers, RDF.type, ns.Researcher))

# Print the updated graph
for s, p, o in g:
    print(s, p, o)

"""**TASK 6.4: Add to the individual JaneSmithers the email address, fullName, given and family names. Use the https://schema.org vocabulary**"""

# TO DO
# Visualize the results
from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
ns = Namespace("http://somewhere#")
schema = Namespace("https://schema.org/")
g.add((ns.JaneSmithers, schema.email, Literal("jane.smithers@example.com")))
g.add((ns.JaneSmithers, schema.familyName, Literal("Smithers")))
g.add((ns.JaneSmithers, schema.givenName, Literal("Jane")))
g.add((ns.JaneSmithers, schema.fullName, Literal("Jane Smithers")))

# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.5: Add UPM as the university where John Smith

1.   Elemento de lista
2.   Elemento de lista

works. Use the "https://example.org/ namespace**
"""

# TO DO
# Visualize the results
from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS

ns = Namespace("http://somewhere#")
ex = Namespace("https://example.org/")
g.add((ex.UPM, RDF.type, ns.University))
g.add((ns.JohnSmith, ex.worksAt, ex.UPM))

# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**Task 6.6: Add that Jown knows Jane using the FOAF vocabulary. Make sure the relationship exists.**"""

# TO DO
# Visualize the results
from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
from rdflib.namespace import FOAF

ns = Namespace("http://somewhere#")
g.add((ns.JohnSmith, FOAF.knows, ns.JaneSmithers))

# Visualize the results
for s, p, o in g:
  print(s,p,o)