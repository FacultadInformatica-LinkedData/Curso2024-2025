# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bgR2K0ibQ9Jbz6JSGJuTiD__5wCp88Mw

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

from rdflib.namespace import  RDF, OWL
from rdflib.plugins.sparql import prepareQuery

VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
DATA1 = Namespace("http://data.three.org#")
DATA2 = Namespace("http://data.four.org#")


def person_data(g1, g2):

    q1 = prepareQuery('''
    SELECT ?person
    WHERE {
        ?person rdf:type DATA1:Person .

    }
    ''', initNs={"rdf": RDF, "DATA1": DATA1})

    q2 = prepareQuery('''
    SELECT ?person
    WHERE {
        ?person rdf:type DATA2:Person .

    }
    ''', initNs={"rdf": RDF, "DATA2": DATA2})

    results_g1 = list(g1.query(q1))
    results_g2 = list(g2.query(q2))

    if not results_g1 or not results_g2:
        print("No Person found")

    for row1 in results_g1:

        person1 = row1.person
        full_name_1 = g1.value(person1, VCARD.FN)

        for row2 in results_g2:

          person2 = row2.person
          full_name_2 = g2.value(person2, VCARD.FN)

          if full_name_1 is not None and full_name_2 is not None and full_name_1 == full_name_2:
            g3.add((person1, OWL.sameAs, person2))



person_data(g1, g2)

#Contar Coincidencias
print(f"Nº Coincidencias: {len(g3)}")

#Coincidencias
for s, p, o in g3:
    print(f"Coincidencia: {s} es el mismo que {o}")