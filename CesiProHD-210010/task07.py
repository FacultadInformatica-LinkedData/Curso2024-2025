# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tRU3p3a2y40F4dkx1_YUY_hg9i6csn6R

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results
ns = Namespace("http://somewhere#")
q1 = """
  SELECT ?subClass
  WHERE {
    ?subClass rdfs:subClassOf ns:LivingThing .
  }
  """
qres = g.query(q1, initNs={"rdfs": RDFS, "ns": ns})
for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results

query = """
  SELECT ?individual
  WHERE {
    ?individual a/rdfs:subClassOf* ns:Person .
  }
  """

qres = g.query(query, initNs={"rdfs": RDFS, "ns": ns})
for r in qres:
  print(r)

"""**TASK 7.3: List all individuals of just "Person" or "Animal". You do not need to list the individuals of the subclasses of person (in SPARQL only)**

"""

# TO DO
# Visualize the results

query = """
  SELECT ?individual
  WHERE {
    ?individual a ns:Person .
    ?individual a ns:Animal .
  }
  """

"""**TASK 7.4:  List the name of the persons who know Rocky (in SPARQL only)**"""

# TO DO
# Visualize the results

query = """
  SELECT ?name
  WHERE {
    ?person vcard:FN ?name .
    ?person vcard:knows ns:Rocky .
  }
  """

"""**Task 7.5: List the name of those animals who know at least another animal in the graph (in SPARQL only)**"""

# TO DO
# Visualize the results

query = """
  SELECT ?animal
  WHERE {
    ?animal a ns:Animal .
    ?animal vcard:knows ?otherAnimal .
    ?otherAnimal a ns:Animal .
  }
  """

"""**Task 7.6: List the age of all living things in descending order (in SPARQL only)**"""

# TO DO
# Visualize the results

query = """
  SELECT ?age
  WHERE {
    ?livingThing a ns:LivingThing .
    ?livingThing vcard:P569 ?age .
  }
  ORDER BY DESC(?age)
  """